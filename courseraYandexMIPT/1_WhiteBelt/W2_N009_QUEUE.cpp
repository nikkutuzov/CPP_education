/*================================================================================*/
/*                    C++_Development_Basics: The_White_Belt                      */
/*================================================================================*/
/*  Tittle: Queue                                                                 */
/*  Start_time: 24.06.2022 14:02                                                  */
/*  End_time: 24.06.2022 14:46                                                    */
/*  Note:                                                                         */
/*================================================================================*/

/*<===============================Problem_Statement==============================>*/

/*
 * Люди стоят в очереди, но никогда не уходят из её начала, зато могут приходить в
 * конец и уходить оттуда. Более того, иногда некоторые люди могут прекращать и
 * начинать беспокоиться из-за того, что очередь не продвигается.
 *
 * Будем считать, что люди в очереди нумеруются целыми числами, начиная с 0.
 *
 * Реализуйте обработку следующих операций над очередью:
 *
 * - WORRY i: пометить i-го человека с начала очереди как беспокоящегося;
 * - QUIET i: пометить i-го человека как успокоившегося;
 * - COME k: добавить k спокойных человек в конец очереди;
 * - COME -k: убрать k человек из конца очереди;
 * - WORRY_COUNT: узнать количество беспокоящихся людей в очереди.
 *
 *   Изначально очередь пуста.
 *
 * Формат ввода
 *
 * Количество операций Q, затем описания операций.
 *
 * Для каждой операции WORRY i и QUIET i гарантируется, что человек с номером i
 * существует в очереди на момент операции.
 *
 * Для каждой операции COME -k гарантируется, что k не больше текущего размера
 * очереди.
 *
 * Формат вывода
 *
 * Для каждой операции WORRY_COUNT выведите одно целое число — количество
 * беспокоящихся людей в очереди.
 *
 * Пример
 *
 * Ввод
 *
 * 8
 * COME 5
 * WORRY 1
 * WORRY 4
 * COME -2
 * WORRY_COUNT
 * COME 3
 * WORRY 3
 * WORRY_COUNT
 *
 * Вывод
 *
 * 1
 * 2
 *
 */

/*<=====================================CODE=====================================>*/

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

/*<-------------------------------------main------------------------------------->*/

int main() {
  std::vector<bool> queue;
  int operation_count = 0;
  std::cin >> operation_count;

  for (int i = 0; i < operation_count; ++i) {
    std::string operation;
    std::cin >> operation;
    if (operation == "COME") {
      int n;
      std::cin >> n;
      queue.resize(queue.size() + n, false);
    }
    if (operation == "WORRY" or operation == "QUIET") {
      int n;
      std::cin >> n;
      --n;
      queue[n] = (operation == "WORRY");
    }
    if (operation == "WORRY_COUNT") {
      std::cout << std::count(begin(queue), end(queue), true) << std::endl;
    }
  }

  return 0;
}
