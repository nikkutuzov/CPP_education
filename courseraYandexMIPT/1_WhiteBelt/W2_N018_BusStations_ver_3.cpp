/*================================================================================*/
/*                    C++_Development_Basics: The_White_Belt                      */
/*================================================================================*/
/*  Tittle: Bus stops ver. 3                                                      */
/*  Start_time: 26.06.2022 21:32                                                  */
/*  End_time: 26.06.2022 21:44                                                    */
/*  Note:                                                                         */
/*================================================================================*/

/*<===============================Problem_Statement==============================>*/

/*
 * В этой задаче вам нужно присваивать номера автобусным маршрутам.
 *
 * А именно, для каждого маршрута, заданного множеством названий остановок, нужно
 * либо выдать новый номер (первому маршруту - 1, второму - 2 и т. д.), либо вернуть
 * номер существующего маршрута, которому соответствует такое множество остановок.
 *
 * В отличие от задачи «Автобусные остановки - 2», наборы остановок, которые можно
 * получить друг из друга перестановкой элементов или добавлением/удалением
 * повторяющихся, следует считать одинаковыми.
 *
 * Формат ввода
 *
 * Сначала вводится количество запросов Q, затем Q описаний запросов.
 *
 * Каждый запрос представляет собой положительное количество остановок N, за которым
 * следуют разделённые пробелом N названий остановок соответствующего маршрута (не
 * обязательно различных). Названия остановок состоят лишь из латинских букв и
 * символов подчёркивания.
 *
 * Формат вывода
 *
 * Выведите ответ на каждый запрос в отдельной строке.
 *
 * Если маршрут с данным набором остановок уже существует, в ответ на
 * соответствующий запрос выведите Already exists for i, где i - номер маршрута с
 * таким набором остановок. В противном случае нужно выделить введённому набору
 * остановок новый номер i и вывести его в формате New bus i.
 *
 * Пример
 *
 * Ввод
 *
 * 5
 * 2 Marushkino Kokoshkino
 * 1 Kokoshkino
 * 2 Marushkino Kokoshkino
 * 2 Kokoshkino Marushkino
 * 2 Kokoshkino Kokoshkino
 *
 * Вывод
 *
 * New bus 1
 * New bus 2
 * Already exists for 1
 * Already exists for 1
 * Already exists for 2
 *
 */

/*<=====================================CODE=====================================>*/

#include <iostream>
#include <string>
#include <map>
#include <set>

/*<-------------------------------------main------------------------------------->*/

int main() {
  std::map<std::set<std::string>, int> routes;
  int counter_for_route = 0;
  int count;
  std::cin >> count;
  for (int i = 0; i < count; ++i) {
    int bus_count;
    std::cin >> bus_count;
    std::set<std::string> stops;
    for (int i = 0; i < bus_count; ++i) {
      std::string stop;
      std::cin >> stop;
      stops.insert(stop);
    }
    if (routes.count(stops) == 1) {
      std::cout << "Already exist " << routes[stops] + 1 << std::endl;
    } else {
      std::cout << "New bus " << counter_for_route + 1 << std::endl;
      routes[stops] = counter_for_route++;
    }
  }


  return 0;
}
